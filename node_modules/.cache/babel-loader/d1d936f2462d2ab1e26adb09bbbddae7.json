{"ast":null,"code":"import _objectSpread from \"/Users/miguelsilva/Desktop/Projetos/JS/React/hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/miguelsilva/Desktop/Projetos/JS/React/hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/miguelsilva/Desktop/Projetos/JS/React/hooks/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        repositories = _useState2[0],\n        setRepositories = _useState2[1]; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  useEffect(async () => {\n    const response = await fetch('https://api.github.com/users/MiguelSilva9910/repos');\n    const data = await response.json();\n    setRepositories(data);\n  }, []);\n  useEffect(() => {}, [repositories]);\n\n  function handleLike(id) {\n    const newRepositories = repositories.map(repo => {\n      return repo.id === id ? _objectSpread({}, repo, {\n        favorite: !repo.favorite\n      }) : repo;\n    });\n    setRepositories(newRepositories);\n  }\n\n  ;\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, repositories.map(repo => React.createElement(\"li\", {\n    key: repo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, repo.name, repo.favorite && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"(Like)\"), React.createElement(\"button\", {\n    onClick: () => handleLike(repo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Like\"))));\n}\n;","map":{"version":3,"sources":["/Users/miguelsilva/Desktop/Projetos/JS/React/hooks/src/App.js"],"names":["React","useState","useEffect","App","repositories","setRepositories","response","fetch","data","json","handleLike","id","newRepositories","map","repo","favorite","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,oBACYF,QAAQ,CAAC,EAAD,CADpB;AAAA;AAAA,QACrBG,YADqB;AAAA,QACPC,eADO,kBAG5B;;;AACAH,EAAAA,SAAS,CAAC,YAAY;AACrB,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAJ,IAAAA,eAAe,CAACG,IAAD,CAAf;AACA,GALQ,EAKN,EALM,CAAT;AAOAN,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACE,YAAD,CAFM,CAAT;;AAIA,WAASM,UAAT,CAAoBC,EAApB,EAAwB;AACtB,UAAMC,eAAe,GAAGR,YAAY,CAACS,GAAb,CAAiBC,IAAI,IAAI;AAC/C,aAAOA,IAAI,CAACH,EAAL,KAAYA,EAAZ,qBAAsBG,IAAtB;AAA4BC,QAAAA,QAAQ,EAAE,CAACD,IAAI,CAACC;AAA5C,WAAyDD,IAAhE;AACD,KAFuB,CAAxB;AAIAT,IAAAA,eAAe,CAACO,eAAD,CAAf;AACD;;AAAA;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,YAAY,CAACS,GAAb,CAAiBC,IAAI,IACpB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACH,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,IAAI,CAACE,IADR,EAEGF,IAAI,CAACC,QAAL,IAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAML,UAAU,CAACI,IAAI,CAACH,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADD,CADH,CADJ;AAWD;AAAA","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function App() {\n  const [repositories, setRepositories] = useState([]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(async () => {\n   const response = await fetch('https://api.github.com/users/MiguelSilva9910/repos');\n   const data = await response.json();\n\n   setRepositories(data);\n  }, []);\n\n  useEffect(() => {\n    \n  }, [repositories]);\n\n  function handleLike(id) {\n    const newRepositories = repositories.map(repo => {\n      return repo.id === id ? { ...repo, favorite: !repo.favorite } : repo\n    });\n\n    setRepositories(newRepositories);\n  };\n\n  return (\n      <ul>\n        {repositories.map(repo => (\n          <li key={repo.id}>\n            {repo.name}\n            {repo.favorite && <span>(Like)</span>}\n            <button onClick={() => handleLike(repo.id)}>Like</button>\n          </li>\n        ))}\n      </ul>\n  )\n};"]},"metadata":{},"sourceType":"module"}